{"status":"ok","feed":{"url":"https://medium.com/feed/@igorstevanovic99","title":"Stories by Igor Stevanovic on Medium","link":"https://medium.com/@igorstevanovic99?source=rss-89681abbf4e8------2","author":"","description":"Stories by Igor Stevanovic on Medium","image":"https://cdn-images-1.medium.com/fit/c/150/150/1*MtlClt2APw-LaLY0hg7fLw.jpeg"},"items":[{"title":"Jetpack Compose: Request Permissions in Two ways","pubDate":"2022-07-08 19:21:03","link":"https://betterprogramming.pub/jetpack-compose-request-permissions-in-two-ways-fd81c4a702c?source=rss-89681abbf4e8------2","guid":"https://medium.com/p/fd81c4a702c","author":"Igor Stevanovic","thumbnail":"https://cdn-images-1.medium.com/max/1024/1*xd2yFtJFHn5D9YQaY6yBKQ.jpeg","description":"\n<p>Today I am going to show you the best ways to request permissions in Jetpack Compose. Make sure to follow my <a href=\"https://medium.com/@igorstevanovic99\">medium account</a>, <a href=\"https://github.com/Giga99\">Github</a>, and <a href=\"https://twitter.com/igor_s1999\">Twitter</a> for the latest news and articles about\u00a0Android.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*xd2yFtJFHn5D9YQaY6yBKQ.jpeg\"><figcaption>Photo by <a href=\"https://unsplash.com/@pathum_danthanarayana\">Pathum Danthanarayana</a> on\u00a0<a href=\"https://unsplash.com/\">Unsplash</a></figcaption></figure><p>Our first permission that we are gonna request will be Camera permission. To use the camera on our device, we need to request permission for it because it belongs to the \u201cdangerous\u201d ones right. First, we need to add this permission into the manifest file like\u00a0this:</p>\n<pre>&lt;uses-permission android:name=\u201dandroid.permission.CAMERA\u201d /&gt;</pre>\n<p>After that, we can go to our Composable in which we need to request this permission and create a launcher for activity results like\u00a0this:</p>\n<a href=\"https://medium.com/media/524fafc0768760c20501c4f6c3a3470d/href\">https://medium.com/media/524fafc0768760c20501c4f6c3a3470d/href</a><p>We create a launcher for activity results with which we are gonna launch an Android built-in dialog for permission requests. Activity returns a boolean which tells us If permission is granted or not. If it is granted we open the camera and if not we could show some info dialog or whatever you want. After that, we will add a button whose onClickcallback calls the checkAndRequestCameraPermission function. This function looks like\u00a0this:</p>\n<a href=\"https://medium.com/media/db0c1d2434f30ed365e0e19ec90fc6be/href\">https://medium.com/media/db0c1d2434f30ed365e0e19ec90fc6be/href</a><p>First, we check if the permission is already granted, if it is we open the camera and if it is not we request it via the launcher. Finally our main composable looks like\u00a0this:</p>\n<a href=\"https://medium.com/media/957b33cafbf9f3d7a7c9bf502c9e78f7/href\">https://medium.com/media/957b33cafbf9f3d7a7c9bf502c9e78f7/href</a><p>Now we are gonna request two permissions for location. We can request both of them at the same time and no need to request them one by one. Permissions are ACCESS_COARSE_LOCATION and ACCESS_FINE_LOCATION<em>.</em> As we all know, the first step is to add them to our beloved manifest\u00a0file:</p>\n<pre>&lt;uses-permission android:name=\u201dandroid.permission.ACCESS_COARSE_LOCATION\u201d /&gt;<br>&lt;uses-permission android:name=\u201dandroid.permission.ACCESS_FINE_LOCATION\u201d /&gt;</pre>\n<p>Then we are gonna add a launcher for activity results and a button for requesting these permissions in the main Composable. Like\u00a0this:</p>\n<a href=\"https://medium.com/media/93d241b354b66da7b9c752aa6f3c26d3/href\">https://medium.com/media/93d241b354b66da7b9c752aa6f3c26d3/href</a><p>Now we have an array of permissions and a launcher activity that is requesting multiple permissions. This activity is gonna show us a built-in dialog that requests every permission that we need. It returns a map of String (permission name) as a key and Boolean (granted or not) as a value. Function checkAndRequesstLocationPermissions looks like\u00a0this:</p>\n<a href=\"https://medium.com/media/e01c3d6dcf4f2a95a7bdc9c3fa5bef2c/href\">https://medium.com/media/e01c3d6dcf4f2a95a7bdc9c3fa5bef2c/href</a><p>It will check every permission if it is granted or not. If all of them are granted we can use location, and if not we are gonna request those that we\u00a0need.</p>\n<h3>Accompanist permissions library</h3>\n<p>That was cool right, now I am gonna show you something even better. That is <a href=\"https://github.com/google/accompanist/tree/main/permissions\">accompanist permissions library</a>, they always make our lives easier. We can use their permissionState and PermissionRequired composable to manipulate with the result of requests even better. First, we are gonna add the dependency in the app-level build.gradle file:</p>\n<pre>implementation \u201ccom.google.accompanist:accompanist-permissions:0.23.1\u201d</pre>\n<p><strong>Note: </strong>At the of writing this article, 0.23.1 was the newest stable version. Check if there is a newer\u00a0version.</p>\n<p>We are gonna request the same Camera permission, so don\u2019t forget to delete an app from your phone or clear app storage. First, we need to create permissionState which will track the state of our permission:</p>\n<pre>val permissionState = rememberPermissionState(permission = Manifest.permission.CAMERA)</pre>\n<p>After that, we are gonna create CameraPermission composable and pass it the permission state as a parameter so it can handle permission. Inside this composable, we are using the accompanist\u2019s PermissionRequired composable which takes in four parameters: <br>- permissionState: the state of our permission that we previously created<br>- permissionNotGrantedContent: content that should be shown after the permission is denied<br>- permissionNotAvailableContent: content that should be shown if the permission is not available<br>- content: Composable callback that will be called after the permission is granted<br>CameraPermission composable looks like\u00a0this:</p>\n<a href=\"https://medium.com/media/6b1fc56bbc8e28f8ce55434c58bbb4be/href\">https://medium.com/media/6b1fc56bbc8e28f8ce55434c58bbb4be/href</a><p><strong>Note: </strong>we need to add ExperimentalPermissionsApi annotation because PermissionState is still experimental.</p>\n<p>So basically in our main composable, it looks like\u00a0this:</p>\n<a href=\"https://medium.com/media/8b2f83f0536e48792845d615f987af0a/href\">https://medium.com/media/8b2f83f0536e48792845d615f987af0a/href</a><p>In the button onClick callback we just launch permission request with our permissionState, simple enough. Now we are gonna request multiple permissions for location. It is done similarly with a few modifications. Again, we first create the state of permissions:</p>\n<a href=\"https://medium.com/media/f59a4a25a42c8339232b24a82ae31259/href\">https://medium.com/media/f59a4a25a42c8339232b24a82ae31259/href</a><p><strong>Note:</strong> type of permissionsState is now MultiplePermissionState, where previously it was PermissionState.</p>\n<p>Next is to create LocationPermissions composable which contains PermissionsRequired accompanist\u2019s composable. It is similar to PermissionRequired, the difference is only in the first parameter which accepts now MultiplePermissionState as the parameter.</p>\n<a href=\"https://medium.com/media/59ddda8800691a558e06d2e8983137df/href\">https://medium.com/media/59ddda8800691a558e06d2e8983137df/href</a><p>And that\u2019s it. In our main composable we just launch multiple permission requests:</p>\n<a href=\"https://medium.com/media/8fbe937d48ebe2c6ef565b9756119a80/href\">https://medium.com/media/8fbe937d48ebe2c6ef565b9756119a80/href</a><p>Cool! As you can see accompanist permissions library gives us more flexibility and makes our life easier. All of the source code you can find in my <a href=\"https://github.com/Giga99/MediumPermissions\">Github\u00a0repo</a>.</p>\n<p>That would be all for this article, I hope you liked it! Feel free to \u201cclap\u201d and share it with your friends if this was useful to you.<br>Don\u2019t forget to follow me for more content:<br><a href=\"https://github.com/Giga99\">Github</a><br><a href=\"https://twitter.com/igor_s1999\">Twitter</a><br><a href=\"https://medium.com/@igorstevanovic99\">Medium</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=fd81c4a702c\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://betterprogramming.pub/jetpack-compose-request-permissions-in-two-ways-fd81c4a702c\">Jetpack Compose: Request Permissions in Two ways</a> was originally published in <a href=\"https://betterprogramming.pub/\">Better Programming</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n","content":"\n<p>Today I am going to show you the best ways to request permissions in Jetpack Compose. Make sure to follow my <a href=\"https://medium.com/@igorstevanovic99\">medium account</a>, <a href=\"https://github.com/Giga99\">Github</a>, and <a href=\"https://twitter.com/igor_s1999\">Twitter</a> for the latest news and articles about\u00a0Android.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*xd2yFtJFHn5D9YQaY6yBKQ.jpeg\"><figcaption>Photo by <a href=\"https://unsplash.com/@pathum_danthanarayana\">Pathum Danthanarayana</a> on\u00a0<a href=\"https://unsplash.com/\">Unsplash</a></figcaption></figure><p>Our first permission that we are gonna request will be Camera permission. To use the camera on our device, we need to request permission for it because it belongs to the \u201cdangerous\u201d ones right. First, we need to add this permission into the manifest file like\u00a0this:</p>\n<pre>&lt;uses-permission android:name=\u201dandroid.permission.CAMERA\u201d /&gt;</pre>\n<p>After that, we can go to our Composable in which we need to request this permission and create a launcher for activity results like\u00a0this:</p>\n<a href=\"https://medium.com/media/524fafc0768760c20501c4f6c3a3470d/href\">https://medium.com/media/524fafc0768760c20501c4f6c3a3470d/href</a><p>We create a launcher for activity results with which we are gonna launch an Android built-in dialog for permission requests. Activity returns a boolean which tells us If permission is granted or not. If it is granted we open the camera and if not we could show some info dialog or whatever you want. After that, we will add a button whose onClickcallback calls the checkAndRequestCameraPermission function. This function looks like\u00a0this:</p>\n<a href=\"https://medium.com/media/db0c1d2434f30ed365e0e19ec90fc6be/href\">https://medium.com/media/db0c1d2434f30ed365e0e19ec90fc6be/href</a><p>First, we check if the permission is already granted, if it is we open the camera and if it is not we request it via the launcher. Finally our main composable looks like\u00a0this:</p>\n<a href=\"https://medium.com/media/957b33cafbf9f3d7a7c9bf502c9e78f7/href\">https://medium.com/media/957b33cafbf9f3d7a7c9bf502c9e78f7/href</a><p>Now we are gonna request two permissions for location. We can request both of them at the same time and no need to request them one by one. Permissions are ACCESS_COARSE_LOCATION and ACCESS_FINE_LOCATION<em>.</em> As we all know, the first step is to add them to our beloved manifest\u00a0file:</p>\n<pre>&lt;uses-permission android:name=\u201dandroid.permission.ACCESS_COARSE_LOCATION\u201d /&gt;<br>&lt;uses-permission android:name=\u201dandroid.permission.ACCESS_FINE_LOCATION\u201d /&gt;</pre>\n<p>Then we are gonna add a launcher for activity results and a button for requesting these permissions in the main Composable. Like\u00a0this:</p>\n<a href=\"https://medium.com/media/93d241b354b66da7b9c752aa6f3c26d3/href\">https://medium.com/media/93d241b354b66da7b9c752aa6f3c26d3/href</a><p>Now we have an array of permissions and a launcher activity that is requesting multiple permissions. This activity is gonna show us a built-in dialog that requests every permission that we need. It returns a map of String (permission name) as a key and Boolean (granted or not) as a value. Function checkAndRequesstLocationPermissions looks like\u00a0this:</p>\n<a href=\"https://medium.com/media/e01c3d6dcf4f2a95a7bdc9c3fa5bef2c/href\">https://medium.com/media/e01c3d6dcf4f2a95a7bdc9c3fa5bef2c/href</a><p>It will check every permission if it is granted or not. If all of them are granted we can use location, and if not we are gonna request those that we\u00a0need.</p>\n<h3>Accompanist permissions library</h3>\n<p>That was cool right, now I am gonna show you something even better. That is <a href=\"https://github.com/google/accompanist/tree/main/permissions\">accompanist permissions library</a>, they always make our lives easier. We can use their permissionState and PermissionRequired composable to manipulate with the result of requests even better. First, we are gonna add the dependency in the app-level build.gradle file:</p>\n<pre>implementation \u201ccom.google.accompanist:accompanist-permissions:0.23.1\u201d</pre>\n<p><strong>Note: </strong>At the of writing this article, 0.23.1 was the newest stable version. Check if there is a newer\u00a0version.</p>\n<p>We are gonna request the same Camera permission, so don\u2019t forget to delete an app from your phone or clear app storage. First, we need to create permissionState which will track the state of our permission:</p>\n<pre>val permissionState = rememberPermissionState(permission = Manifest.permission.CAMERA)</pre>\n<p>After that, we are gonna create CameraPermission composable and pass it the permission state as a parameter so it can handle permission. Inside this composable, we are using the accompanist\u2019s PermissionRequired composable which takes in four parameters: <br>- permissionState: the state of our permission that we previously created<br>- permissionNotGrantedContent: content that should be shown after the permission is denied<br>- permissionNotAvailableContent: content that should be shown if the permission is not available<br>- content: Composable callback that will be called after the permission is granted<br>CameraPermission composable looks like\u00a0this:</p>\n<a href=\"https://medium.com/media/6b1fc56bbc8e28f8ce55434c58bbb4be/href\">https://medium.com/media/6b1fc56bbc8e28f8ce55434c58bbb4be/href</a><p><strong>Note: </strong>we need to add ExperimentalPermissionsApi annotation because PermissionState is still experimental.</p>\n<p>So basically in our main composable, it looks like\u00a0this:</p>\n<a href=\"https://medium.com/media/8b2f83f0536e48792845d615f987af0a/href\">https://medium.com/media/8b2f83f0536e48792845d615f987af0a/href</a><p>In the button onClick callback we just launch permission request with our permissionState, simple enough. Now we are gonna request multiple permissions for location. It is done similarly with a few modifications. Again, we first create the state of permissions:</p>\n<a href=\"https://medium.com/media/f59a4a25a42c8339232b24a82ae31259/href\">https://medium.com/media/f59a4a25a42c8339232b24a82ae31259/href</a><p><strong>Note:</strong> type of permissionsState is now MultiplePermissionState, where previously it was PermissionState.</p>\n<p>Next is to create LocationPermissions composable which contains PermissionsRequired accompanist\u2019s composable. It is similar to PermissionRequired, the difference is only in the first parameter which accepts now MultiplePermissionState as the parameter.</p>\n<a href=\"https://medium.com/media/59ddda8800691a558e06d2e8983137df/href\">https://medium.com/media/59ddda8800691a558e06d2e8983137df/href</a><p>And that\u2019s it. In our main composable we just launch multiple permission requests:</p>\n<a href=\"https://medium.com/media/8fbe937d48ebe2c6ef565b9756119a80/href\">https://medium.com/media/8fbe937d48ebe2c6ef565b9756119a80/href</a><p>Cool! As you can see accompanist permissions library gives us more flexibility and makes our life easier. All of the source code you can find in my <a href=\"https://github.com/Giga99/MediumPermissions\">Github\u00a0repo</a>.</p>\n<p>That would be all for this article, I hope you liked it! Feel free to \u201cclap\u201d and share it with your friends if this was useful to you.<br>Don\u2019t forget to follow me for more content:<br><a href=\"https://github.com/Giga99\">Github</a><br><a href=\"https://twitter.com/igor_s1999\">Twitter</a><br><a href=\"https://medium.com/@igorstevanovic99\">Medium</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=fd81c4a702c\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://betterprogramming.pub/jetpack-compose-request-permissions-in-two-ways-fd81c4a702c\">Jetpack Compose: Request Permissions in Two ways</a> was originally published in <a href=\"https://betterprogramming.pub/\">Better Programming</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n","enclosure":{},"categories":["android-permissions","android","jetpack-compose","kotlin"]}]}